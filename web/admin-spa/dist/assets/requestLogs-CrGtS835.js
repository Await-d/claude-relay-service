import{aT as Ie,r as p,c as S}from"./vue-vendor-C9wZz30M.js";import{b as v}from"./index-CQZgE5sL.js";import{s as f}from"./toast-BvwA7Mwb.js";const we=Ie("requestLogs",()=>{const T=p([]),A=p(!1),_=p(!1),q=p({totalRequests:0,errorRate:0,averageResponseTime:0,topApiKeys:[]}),h=p([]),R=p(!1),D=p(null),I=p(null),K=p(0),k=p({apiKeyId:"",startDate:"",endDate:"",statusCode:"",method:"",search:"",page:1,limit:50,sortBy:"timestamp",sortOrder:"desc"}),E=p({page:1,limit:50,total:0,totalPages:0}),y=p({enabled:!1,mode:"performance",sampling:{successRate:.1,errorRate:1,slowRequestThreshold:5e3},retention:{days:30,maxEntries:1e5},async:{batchSize:50,flushInterval:2e3}}),w=p(!1),P=p(!1),ie=a=>{if(!Array.isArray(a)||a.length===0)return[];const e=new Map,t=30*1e3;return a.forEach(s=>{let r;if(s.requestId)r=`req_${s.requestId}`;else{const l=new Date(s.timestamp||Date.now()).getTime(),c=Math.floor(l/t)*t;r=`${s.keyId||"unknown"}_${s.path||"/"}_${s.method||"GET"}_${c}`}if(e.has(r)){const l=e.get(r),c=le(l,s);e.set(r,c)}else e.set(r,{...s,_mergedCount:1,_originalIds:[s.id||s.logId||s.timestamp]})}),Array.from(e.values()).sort((s,r)=>new Date(r.timestamp)-new Date(s.timestamp))},le=(a,e)=>{var s,r,l,c,d,n,m,g,o,i,u,C,j,U,z,W,N,G,X,V,Y,J,Q,Z,L,ee,te,se,ae,oe,re,ne;const t={...a};return new Date(e.timestamp)>new Date(a.timestamp)&&(t.timestamp=e.timestamp,t.statusCode=e.statusCode||a.statusCode,t.responseTime=e.responseTime||a.responseTime),t.tokens=(t.tokens||0)+(e.tokens||0),t.inputTokens=(t.inputTokens||0)+(e.inputTokens||0),t.outputTokens=(t.outputTokens||0)+(e.outputTokens||0),t.cacheCreateTokens=(t.cacheCreateTokens||0)+(e.cacheCreateTokens||0),t.cacheReadTokens=(t.cacheReadTokens||0)+(e.cacheReadTokens||0),t.cost=(t.cost||0)+(e.cost||0),(e.tokenDetails||e.costDetails)&&(t.tokenDetails={totalTokens:(((s=t.tokenDetails)==null?void 0:s.totalTokens)||0)+(((r=e.tokenDetails)==null?void 0:r.totalTokens)||0),inputTokens:(((l=t.tokenDetails)==null?void 0:l.inputTokens)||0)+(((c=e.tokenDetails)==null?void 0:c.inputTokens)||0),outputTokens:(((d=t.tokenDetails)==null?void 0:d.outputTokens)||0)+(((n=e.tokenDetails)==null?void 0:n.outputTokens)||0),cacheCreateTokens:(((m=t.tokenDetails)==null?void 0:m.cacheCreateTokens)||0)+(((g=e.tokenDetails)==null?void 0:g.cacheCreateTokens)||0),cacheReadTokens:(((o=t.tokenDetails)==null?void 0:o.cacheReadTokens)||0)+(((i=e.tokenDetails)==null?void 0:i.cacheReadTokens)||0),cacheHitRatio:Math.max(((u=t.tokenDetails)==null?void 0:u.cacheHitRatio)||0,((C=e.tokenDetails)==null?void 0:C.cacheHitRatio)||0),tokenEfficiency:Math.max(((j=t.tokenDetails)==null?void 0:j.tokenEfficiency)||0,((U=e.tokenDetails)==null?void 0:U.tokenEfficiency)||0),ephemeral5mTokens:(((z=t.tokenDetails)==null?void 0:z.ephemeral5mTokens)||0)+(((W=e.tokenDetails)==null?void 0:W.ephemeral5mTokens)||0),ephemeral1hTokens:(((N=t.tokenDetails)==null?void 0:N.ephemeral1hTokens)||0)+(((G=e.tokenDetails)==null?void 0:G.ephemeral1hTokens)||0)},t.costDetails={totalCost:(((X=t.costDetails)==null?void 0:X.totalCost)||0)+(((V=e.costDetails)==null?void 0:V.totalCost)||0),costPerToken:((Y=e.costDetails)==null?void 0:Y.costPerToken)||((J=t.costDetails)==null?void 0:J.costPerToken)||0,currency:((Q=e.costDetails)==null?void 0:Q.currency)||((Z=t.costDetails)==null?void 0:Z.currency)||"USD"}),e.usage&&(t.usage={input_tokens:(((L=t.usage)==null?void 0:L.input_tokens)||0)+(((ee=e.usage)==null?void 0:ee.input_tokens)||0),output_tokens:(((te=t.usage)==null?void 0:te.output_tokens)||0)+(((se=e.usage)==null?void 0:se.output_tokens)||0),cache_creation_input_tokens:(((ae=t.usage)==null?void 0:ae.cache_creation_input_tokens)||0)+(((oe=e.usage)==null?void 0:oe.cache_creation_input_tokens)||0),cache_read_input_tokens:(((re=t.usage)==null?void 0:re.cache_read_input_tokens)||0)+(((ne=e.usage)==null?void 0:ne.cache_read_input_tokens)||0)}),e.requestHeaders&&Object.keys(e.requestHeaders).length>0&&(t.requestHeaders={...t.requestHeaders,...e.requestHeaders}),e.responseHeaders&&Object.keys(e.responseHeaders).length>0&&(t.responseHeaders={...t.responseHeaders,...e.responseHeaders}),e.requestBody&&!t.requestBody&&(t.requestBody=e.requestBody),e.responseBody&&!t.responseBody&&(t.responseBody=e.responseBody),t._mergedCount=(t._mergedCount||1)+1,t._originalIds=[...t._originalIds||[],e.id||e.logId||e.timestamp],t},ce=S(()=>{const a=Array.isArray(T.value)?T.value:[];return ie(a)}),ue=S(()=>{const a=k.value;return a.apiKeyId||a.startDate||a.endDate||a.statusCode||a.method||a.search}),de=S(()=>{const a=new Map;return Array.isArray(h.value)&&h.value.forEach(e=>{if(e&&e.id){const t={id:e.id,name:e.name||`API Key ${e.id}`,status:e.status||"unknown"};a.set(e.id,t)}}),a}),x=()=>{var s;if(!((s=h.value)!=null&&s.length)||D.value)return!0;const a=Date.now(),e=I.value,t=5*60*1e3;return!e||a-e>t},$=async(a=0)=>{var s,r,l,c,d,n,m,g;const t=[1e3,2e3,4e3];try{console.log(`[fetchApiKeys] 尝试获取 API Keys，重试次数: ${a}`);const o=await v.get("/admin/api-keys");if(!o)throw new Error("服务器响应为空");if(!o.success)throw new Error(o.message||`服务器返回错误状态: success=${o.success}`);if(!o.data)throw new Error("响应数据为空");let i=[];if(Array.isArray(o.data))i=o.data;else if(o.data.apiKeys&&Array.isArray(o.data.apiKeys))i=o.data.apiKeys;else if(typeof o.data=="object"&&Object.keys(o.data).length>0){const u=Object.values(o.data).filter(Array.isArray);u.length>0?i=u[0]:(console.warn("[fetchApiKeys] API Key 数据格式异常，无法解析数组:",o.data),i=[])}else console.warn("[fetchApiKeys] 未知的 API Key 数据格式:",o.data),i=[];return i=i.filter(u=>!u||typeof u!="object"?(console.warn("[fetchApiKeys] 跳过无效的 API Key 项:",u),!1):!0),i=i.map(u=>({id:u.id||u.keyId||u._id||null,name:u.name||u.keyName||`API Key ${u.id||"Unknown"}`,status:u.status||"active",...u})),h.value=i,D.value=null,I.value=Date.now(),K.value=0,console.log(`[fetchApiKeys] 成功获取 ${i.length} 个 API Keys`),{success:!0,data:i}}catch(o){if(console.error(`[fetchApiKeys] 获取失败 (重试 ${a}/3):`,{message:o.message,status:(s=o.response)==null?void 0:s.status,statusText:(r=o.response)==null?void 0:r.statusText,code:o.code,stack:(l=o.stack)==null?void 0:l.substring(0,200)}),a<3){const u=t[a]||4e3;return console.log(`[fetchApiKeys] ${u}ms 后进行第 ${a+1} 次重试...`),await new Promise(C=>setTimeout(C,u)),$(a+1)}D.value={message:o.message||"获取 API Key 列表失败",code:o.code||"FETCH_ERROR",status:((c=o.response)==null?void 0:c.status)||null,timestamp:Date.now(),retryCount:a},K.value=a;let i="获取 API Key 列表失败";throw o.code==="NETWORK_ERROR"||!navigator.onLine?i="网络连接失败，请检查网络后重试":((d=o.response)==null?void 0:d.status)===401?i="认证失败，请重新登录":((n=o.response)==null?void 0:n.status)===403?i="无权限访问 API Key 列表":((m=o.response)==null?void 0:m.status)>=500?i="服务器错误，请稍后重试":(g=o.message)!=null&&g.includes("timeout")&&(i="请求超时，请稍后重试"),f(i,"error"),o}},B=async(a=!1)=>{if(!a&&!x())return console.log("[fetchApiKeys] 使用缓存的 API Key 数据"),{success:!0,data:h.value,fromCache:!0};if(R.value){for(console.log("[fetchApiKeys] 正在加载中，等待完成...");R.value;)await new Promise(e=>setTimeout(e,100));return{success:!0,data:h.value,waited:!0}}R.value=!0;try{const e=await $(0);return e.success&&e.data&&(console.log("[fetchApiKeys] 设置API Key数据到响应式状态:",e.data.length),(!h.value||h.value.length!==e.data.length)&&(console.log("[fetchApiKeys] 重新设置apiKeyList.value"),h.value=e.data)),e}finally{R.value=!1}},fe=()=>{h.value=[],D.value=null,I.value=null,K.value=0,console.log("[clearApiKeyCache] API Key 缓存已清除")},pe=async()=>(console.log("[retryFetchApiKeys] 手动重试获取 API Keys"),D.value=null,B(!0)),b=async(a={})=>{console.log("🚀 fetchLogs方法被调用!",{params:a,filtersValue:k.value}),A.value=!0;try{const e={...k.value,...a},t={...e,keyId:e.apiKeyId,status:e.statusCode,startDate:e.startDate,endDate:e.endDate,method:e.method,search:e.search,page:e.page,limit:e.limit,sortBy:e.sortBy,sortOrder:e.sortOrder,apiKeyId:void 0,statusCode:void 0};Object.keys(t).forEach(r=>{(t[r]===void 0||t[r]==="")&&delete t[r]}),console.log("🔍 fetchLogs发送的参数:",t),console.log("🔍 原始filters状态:",k.value);const s=await v.get("/admin/request-logs",{params:t});return s&&s.success&&s.data&&(T.value=s.data.logs||[],E.value={page:s.data.page||1,limit:s.data.limit||50,total:s.data.total||0,totalPages:s.data.totalPages||0}),s}catch(e){throw console.error("Failed to fetch request logs:",e),f("获取请求日志失败","error"),e}finally{A.value=!1}},me=async(a,e={})=>{A.value=!0;try{const t={...e},s=await v.get(`/admin/request-logs/${a}`,{params:t});return s&&s.success&&s.data&&(T.value=s.data.logs||[],E.value={page:s.data.page||1,limit:s.data.limit||50,total:s.data.total||0,totalPages:s.data.totalPages||0}),s}catch(t){throw console.error("Failed to fetch API key logs:",t),f("获取API Key日志失败","error"),t}finally{A.value=!1}},he=async a=>{var e,t;if(!a)return console.warn("fetchLogDetails: logId为空"),null;try{console.log(`[fetchLogDetails] 获取日志详情: ${a}`);const s=await v.get(`/admin/request-logs/${a}/details`);return s&&s.success&&s.data?(console.log("[fetchLogDetails] 成功获取日志详情:",s.data),s.data):(console.warn("[fetchLogDetails] API返回失败:",s),null)}catch(s){throw console.error("Failed to fetch log details:",s),((e=s.response)==null?void 0:e.status)===404?f("日志记录不存在或已被删除","error"):((t=s.response)==null?void 0:t.status)===403?f("无权限查看此日志详情","error"):f("获取日志详情失败，请稍后重试","error"),s}},O=async(a="24h")=>{try{const e={};if(a==="24h"){const s=new Date,r=new Date(s.getTime()-24*60*60*1e3);e.startDate=r.toISOString(),e.endDate=s.toISOString()}else if(a==="7d"){const s=new Date,r=new Date(s.getTime()-7*24*60*60*1e3);e.startDate=r.toISOString(),e.endDate=s.toISOString()}const t=await v.get("/admin/request-logs/stats",{params:e});if(t&&t.success&&t.data){const s=t.data,r={totalRequests:s.totalRequests||0,errorRate:s.totalRequests>0?Object.entries(s.statusCodes||{}).filter(([l])=>l.startsWith("4")||l.startsWith("5")).reduce((l,[,c])=>l+c,0)/s.totalRequests*100:0,averageResponseTime:s.totalRequests>0?(s.totalResponseTime||0)/s.totalRequests:0,totalTokens:s.totalTokens||0,statusCodes:s.statusCodes||{},models:s.models||{},topApiKeys:Object.entries(s.apiKeys||{}).map(([l,c])=>({keyId:l,count:c})).sort((l,c)=>c.count-l.count).slice(0,5)};return q.value=r,{success:!0,data:r}}else{const s={totalRequests:0,errorRate:0,averageResponseTime:0,totalTokens:0,statusCodes:{},models:{},topApiKeys:[]};return q.value=s,{success:!0,data:s}}}catch(e){throw console.error("Failed to fetch log stats:",e),f("获取统计信息失败","error"),e}},ye=async a=>{try{const e=await v.delete(`/admin/request-logs/${a}`);return e&&e.success&&(f("日志删除成功","success"),await b()),e}catch(e){throw console.error("Failed to delete logs:",e),f("删除日志失败","error"),e}},ge=async(a="json",e={})=>{var t,s;_.value=!0;try{const r={...k.value,...e},l={format:a,...r,keyId:r.apiKeyId,status:r.statusCode,search:void 0,apiKeyId:void 0,statusCode:void 0};Object.keys(l).forEach(i=>{(l[i]===void 0||l[i]==="")&&delete l[i]}),f(`正在导出日志为 ${a.toUpperCase()} 格式...`,"info");const c=await v.get("/admin/request-logs/export",{params:l,responseType:"blob"});let d=`request-logs-${new Date().getTime()}.${a}`;const n=(s=(t=c.headers)==null?void 0:t.get)==null?void 0:s.call(t,"Content-Disposition");if(n){const i=n.match(/filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/);i&&i[1]&&(d=i[1].replace(/['"]/g,""))}const m=c.data,g=window.URL.createObjectURL(m),o=document.createElement("a");return o.href=g,o.download=d,o.style.display="none",document.body.appendChild(o),o.click(),document.body.removeChild(o),window.URL.revokeObjectURL(g),f(`日志已成功导出为 ${a.toUpperCase()} 格式`,"success"),{success:!0,filename:d}}catch(r){console.error("Failed to export logs:",r);const l=r.message||"导出日志失败";throw f(l,"error"),r}finally{_.value=!1}},ke=async()=>{var a,e,t,s,r,l,c;w.value=!0;try{const d=await v.get("/admin/request-logs/config");if(d&&d.success&&d.data){const n=d.data;let m=30;typeof n.retentionDays=="number"?m=n.retentionDays:typeof n.retentionDays=="object"&&((a=n.retentionDays)!=null&&a.days)&&(m=n.retentionDays.days);const g={enabled:n.enabled||!1,mode:n.level==="debug"?"detailed":"performance",level:n.level||"info",retentionDays:m,maxFileSize:n.maxFileSize||10,maxFiles:n.maxFiles||10,includeHeaders:n.includeHeaders!==void 0?n.includeHeaders:!0,includeBody:n.includeBody!==void 0?n.includeBody:!0,includeResponse:n.includeResponse!==void 0?n.includeResponse:!0,includeErrors:n.includeErrors!==void 0?n.includeErrors:!0,filterSensitiveData:n.filterSensitiveData!==void 0?n.filterSensitiveData:!0,updatedAt:n.updatedAt,sampling:{successRate:((e=y.value.sampling)==null?void 0:e.successRate)||.1,errorRate:((t=y.value.sampling)==null?void 0:t.errorRate)||1,slowRequestThreshold:((s=y.value.sampling)==null?void 0:s.slowRequestThreshold)||5e3},retention:{days:m,maxEntries:((r=y.value.retention)==null?void 0:r.maxEntries)||1e5},async:{batchSize:((l=y.value.async)==null?void 0:l.batchSize)||50,flushInterval:((c=y.value.async)==null?void 0:c.flushInterval)||2e3}};y.value=g}return d}catch(d){throw f("加载配置失败","error"),d}finally{w.value=!1}},F=async a=>{P.value=!0;try{const e=await v.put("/admin/request-logs/config",a);return e&&e.success&&(y.value={...y.value,...e.data},f("配置保存成功","success")),e}catch(e){throw console.error("Failed to save request logging config:",e),f("保存配置失败","error"),e}finally{P.value=!1}},ve=async()=>await F({enabled:!1,mode:"performance",sampling:{successRate:.1,errorRate:1,slowRequestThreshold:5e3},retention:{days:30,maxEntries:1e5},async:{batchSize:50,flushInterval:2e3}}),De=a=>{k.value={...k.value,...a}},Te=()=>{k.value={apiKeyId:"",startDate:"",endDate:"",statusCode:"",method:"",search:"",page:1,limit:50,sortBy:"timestamp",sortOrder:"desc"}},Ae=async()=>{await b(),await O()},Re=a=>({...a,timestamp:new Date(a.timestamp).toLocaleString("zh-CN"),duration:a.responseTime?`${a.responseTime}ms`:"N/A",statusClass:H(a.statusCode),methodClass:M(a.method)}),H=a=>{const e=parseInt(a);return e?e>=200&&e<300?"text-green-600":e>=300&&e<400?"text-yellow-600":e>=400&&e<500?"text-orange-600":e>=500?"text-red-600":"text-gray-500":"text-gray-500"},M=a=>({GET:"text-blue-600",POST:"text-green-600",PUT:"text-yellow-600",DELETE:"text-red-600",PATCH:"text-purple-600"})[a]||"text-gray-600";return{logs:T,loading:A,exporting:_,stats:q,filters:k,pagination:E,config:y,configLoading:w,configSaving:P,apiKeyList:h,apiKeyLoading:R,apiKeyError:D,apiKeyLoadTime:I,apiKeyRetryCount:K,filteredLogs:ce,hasFilters:ue,apiKeyMap:de,fetchApiKeys:B,clearApiKeyCache:fe,retryFetchApiKeys:pe,shouldRefreshApiKeys:x,fetchLogs:b,fetchLogsByApiKey:me,fetchLogDetails:he,fetchStats:O,deleteLogsByApiKey:ye,exportLogs:ge,refreshLogs:Ae,loadConfig:ke,saveConfig:F,resetConfig:ve,updateFilters:De,clearFilters:Te,formatLogEntry:Re,getStatusClass:H,getMethodClass:M,formatBytes:a=>{if(a===0)return"0 B";const e=1024,t=["B","KB","MB","GB"],s=Math.floor(Math.log(a)/Math.log(e));return parseFloat((a/Math.pow(e,s)).toFixed(2))+" "+t[s]},formatDuration:a=>a<1e3?`${a}ms`:a<6e4?`${(a/1e3).toFixed(1)}s`:`${(a/6e4).toFixed(1)}m`}});export{we as u};
